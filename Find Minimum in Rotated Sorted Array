//https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/


class Solution {
public:
    int findMin(vector<int>& arr) {
        
        
        int n = arr.size() ; 
        if (!n)
                return 0 ;
        int ans = 0  ; 
        int low = 0 , high = n - 1 ; 
        while ( low <= high )
        {
            
            if ( high == low )
            {
                ans = low ; 
                break ; 
            }
            
            int mid = ( low + high ) / 2 ; 
            if ( mid - 1 >= 0 and arr [ mid - 1 ] > arr [ mid ] )
            {
                ans = mid ; 
                break ; 
            }
            
            if ( mid + 1 < n and arr [ mid ] > arr [ mid + 1 ] )
            {
                ans = mid + 1 ; 
                break ; 
            }
            if ( arr [ high ] > arr [ mid ] )
                    high = mid - 1 ; 
            else if ( arr [ high ] < arr [ mid ] )
                    low = mid + 1 ;
            
        }
        
        
        return arr [ ans ] ; 

    }
};
