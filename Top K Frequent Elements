//https://leetcode.com/problems/top-k-frequent-elements/


class Solution {
public:
       
       
       
    
       vector<int> topKFrequent(vector<int>& arr, int k) {
        
           
           map < int , int > mp ; 
           for ( int i = 0 ; i < arr .size() ; i ++ )
           {
               mp [ arr [ i ] ] ++ ; 
           }
           
           priority_queue < pair < int , int > > pq ; 
           vector < int > ans ; 
           for ( auto i : mp )
           {
               pq.push( { i.second , i.first  } ) ; 
               if ( pq.size() > mp.siz
                   e() - k )
               {
                   ans.push_back ( pq.top() .second ) ; 
                   pq.pop() ; 
               }
           }
           
           return ans ; 
    }
};
